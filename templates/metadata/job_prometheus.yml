job_types:
- name: prometheus
  resource_label: Prometheus
  templates:
  - name: cf_exporter
    release: prometheus
  - name: bosh_exporter
    release: prometheus
  - name: firehose_exporter
    release: prometheus
  - name: blackbox_exporter
    release: prometheus
  - name: prometheus
    release: prometheus
  - name: pushgateway
    release: prometheus
  static_ip: 1
  dynamic_ip: 0
  max_in_flight: 1
  resource_definitions:
    - name: ram
      type: integer
      configurable: true
      default: 2048
      constraints:
        min: 1024
    - name: ephemeral_disk
      type: integer
      configurable: true
      default: 10240
      constraints:
        min: 10240
    - name: persistent_disk
      type: integer
      configurable: true
      default: 10240
      constraints:
        min: 10240
    - name: cpu
      type: integer
      configurable: true
      default: 1
  instance_definition:
    name: instances
    type: integer
    configurable: false
    default: 1
    constraints:
      min: 1
      max: 1
  manifest: |
    prometheus:
      scrape_configs:
      - job_name: prometheus
        static_configs:
        - targets:
          - localhost:9090
      - job_name: pushgateway
        static_configs:
        - targets:
          - localhost:9091
      - job_name: cf
        static_configs:
        - targets:
          - localhost:9193
      - job_name: firehose
        static_configs:
        - targets:
          - localhost:9186
      - job_name: bosh
        static_configs:
        - targets:
          - localhost:9190
      - job_name: node
        file_sd_configs:
          - files: [/var/vcap/store/bosh_exporter/bosh_target_groups.json]
        relabel_configs:
        - action: keep
          regex: node_exporter
          source_labels: [__meta_bosh_job_process_name]
        - regex: (.*)
          replacement: ${1}:9100
          source_labels: [__address__]
          target_label: __address__
      - job_name: cf_api
        metrics_path: /probe
        params:
          module: [http]
        relabel_configs:
        - regex: (.*)
          replacement: ${1}
          source_labels: [__address__]
          target_label: __param_target
        - regex: (.*)
          replacement: ${1}
          source_labels: [__param_target]
          target_label: instance
        - regex: .*
          replacement: localhost:9115
          source_labels: []
          target_label: __address__
        static_configs:
        - targets: [(( $runtime.system_api_url ))/v2/info]
      - job_name: cf_login
        metrics_path: /probe
        params:
          module:
          - http
        relabel_configs:
        - regex: (.*)
          replacement: ${1}
          source_labels:
          - __address__
          target_label: __param_target
        - regex: (.*)
          replacement: ${1}
          source_labels:
          - __param_target
          target_label: instance
        - regex: .*
          replacement: localhost:9115
          source_labels: []
          target_label: __address__
        static_configs:
        - targets: [(( $runtime.login_url ))/login]
      - job_name: cf_uaa
        metrics_path: /probe
        params:
          module:
          - http
        relabel_configs:
        - regex: (.*)
          replacement: ${1}
          source_labels:
          - __address__
          target_label: __param_target
        - regex: (.*)
          replacement: ${1}
          source_labels:
          - __param_target
          target_label: instance
        - regex: .*
          replacement: localhost:9115
          source_labels: []
          target_label: __address__
        static_configs:
        - targets: [(( $runtime.uaa_url ))/login]
    bosh_exporter:
      bosh:
        ca_cert: (( $director.ca_certificate ))
        url: (( $director.hostname ))
        username: (( $director.username ))
        password: (( $director.password ))
      metrics:
        environment: alpha-a
    cf_exporter:
      cf:
        api_url: (( $runtime.system_api_url ))
        skip_ssl_verify: (( .ha_proxy.skip_cert_verify.value ))
        client_id: (( .uaa.push_console_credentials.identity ))
        client_secret: (( .uaa.push_console_credentials.password ))
        deployment_name: cloudfoundry
        password: REDACTED
        username: admin
      metrics:
        environment: alpha-a
    firehose_exporter:
      doppler:
        url: wss://doppler.(( $runtime.system_domain )):443
      metrics:
        environment: alpha-a
      uaa:
        client_id: (( .uaa.push_console_credentials.identity ))
        client_secret: (( .uaa.push_console_credentials.password ))
        url: (( $runtime.uaa_url ))
